<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPF_UC_Menu">

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">#FF0CB382</Color>
    <Color x:Key="ControlMediumColor">#FF0CB382</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF0CB382</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">White</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF0CB382</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <!--NewStyle colors-->
    <Color x:Key="MenuBorderBackgroundColor">#FF0CB382</Color>
    <Color x:Key="FirstLevelMenuPopupColor">#FFFFFFFF</Color>
    <Color x:Key="SecondLevelMenuPopupColor">#FF0CB382</Color>
    <Color x:Key="ThirdLevelMenuPopupColor">#FF0A8F68</Color>
    <Color x:Key="MenuItemMouseOverColor">#FF0EC992</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF" Offset="0" />
                <GradientStop Color="#600000FF" Offset="0.4" />
                <GradientStop Color="#600000FF" Offset="0.6" />
                <GradientStop Color="#000000FF" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="0">
                        <!--<Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>-->
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource MenuBorderBackgroundColor}">
                                <!--<GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />-->
                                <!--<GradientStop Color="{DynamicResource MenuBorderBackgroundColor}" Offset="1" />-->
                            </SolidColorBrush>
                        </Border.Background>
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="0">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem （暂不用）-->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>

                        <!--Style="{StaticResource MenuScrollButton}"-->
                        <RepeatButton Grid.Row="0" Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <!--<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="{StaticResource UpArrow}" />-->
                        </RepeatButton>

                        <!--Style="{StaticResource MenuScrollButton}"-->
                        <RepeatButton Grid.Row="2" Grid.Column="0" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                            <!--Data="{StaticResource DownArrow}"-->
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader 有子菜单的顶级菜单-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter ContentSource="Header" Width="{Binding Path=Width,RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <!--//Points 是调整三角形的样子:三个顶点的坐标-->
                <Polygon x:Name="Polygon" Margin="0,0,0,-2" Height="7" Width="15.3" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Hidden" Stretch="Fill" Points="7.65,0,15.3,7,0,7" Stroke="White" StrokeThickness="0">
                    <Polygon.Fill>
                        <SolidColorBrush Color="#ffffff" Opacity="1" />
                    </Polygon.Fill>
                </Polygon>
                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="2,0,2,2">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect Color="LightGray" Direction="270" Opacity="0.4" />
                        </Border.Effect>
                        <ScrollViewer x:Name="ScrollViewer" CanContentScroll="True" VerticalScrollBarVisibility="Auto" Style="{DynamicResource ScrollViewerStyleNew}">
                            <StackPanel IsItemsHost="True" MinHeight="30" KeyboardNavigation.DirectionalNavigation="Continue" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                        <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource ControlLightColor}" />
                                    <GradientStop Color="{StaticResource ControlMouseOverColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>-->
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Popup" Property="IsOpen" Value="true" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                <!--<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />-->
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Popup" Property="IsOpen" Value="true" />
                <Setter TargetName="Polygon" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter TargetName="Popup" Property="IsOpen" Value="false" />
                <Setter TargetName="Polygon" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem 无子菜单的顶级菜单-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter ContentSource="Header" Width="{Binding Path=Width,RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource ControlLightColor}" />
                                    <GradientStop Color="{StaticResource ControlMouseOverColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>-->
                        <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItemHeader 有子菜单的二级子菜单-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0">
            <Grid>
                <!--<Grid.ColumnDefinitions>-->
                <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />-->
                <!--<ColumnDefinition Width="*" />-->
                <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />-->
                <!--<ColumnDefinition Width="13" />-->
                <!--</Grid.ColumnDefinitions>-->
                <!--<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />-->
                <ContentPresenter x:Name="HeaderHost" ContentSource="Header" Width="{Binding Path=Width,RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}" RecognizesAccessKey="True" Margin="15,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />-->
                <!--<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>-->
                <!--//Points 是调整三角形的样子:三个顶点的坐标-->
                <Polygon x:Name="Polygon" Margin="0,0,5,0" Height="10" Width="5" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Visible" Stretch="Fill" Points="0,0,5,5,0,10" Stroke="White" StrokeThickness="0">
                    <Polygon.Fill>
                        <SolidColorBrush Color="#FF0EC992" Opacity="1" />
                    </Polygon.Fill>
                </Polygon>
                <Popup x:Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="0,2,2,2">
                        <!--<Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                        </Border.BorderBrush>-->
                        <!--<Border.Effect>
                            <DropShadowEffect Color="LightGray" BlurRadius="0"/>
                        </Border.Effect>-->
                        <ScrollViewer x:Name="ScrollViewer" CanContentScroll="True" VerticalScrollBarVisibility="Auto" Style="{DynamicResource ScrollViewerStyleNew}">
                            <StackPanel IsItemsHost="True" MinHeight="30" KeyboardNavigation.DirectionalNavigation="Continue" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                        <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                        </LinearGradientBrush>-->
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>-->
                <Setter TargetName="Popup" Property="IsOpen" Value="true" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="2,0,0,0" />
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Popup" Property="IsOpen" Value="true" />
                <!--<Setter TargetName="Polygon" Property="Visibility" Value="Visible" />-->
                <Setter TargetName="Polygon" Property="Fill" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter TargetName="Popup" Property="IsOpen" Value="false" />
                <!--<Setter TargetName="Polygon" Property="Visibility" Value="Hidden" />-->
                <Setter TargetName="Polygon" Property="Fill" Value="#FF0EC992" />
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOpen" Value="true">
                <Setter TargetName="SubmenuBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="SubmenuBorder" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="LightGray" Direction="0" Opacity="0.4" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup" Property="IsOpen" Value="false">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem 无子菜单的二级子菜单-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0">
            <Grid>
                <!--<Grid.ColumnDefinitions>-->
                <!--<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />-->
                <!--<ColumnDefinition Width="*" />-->
                <!--<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
        <ColumnDefinition Width="13" />-->
                <!--</Grid.ColumnDefinitions>-->
                <!--<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />-->
                <!--<Border x:Name="Check" Width="13" Height="Auto" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">-->
                <!--<Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>-->
                <!--<Border.Background>-->
                <!--<SolidColorBrush Color="{DynamicResource SecondLevelMenuPopupBrush}" />-->
                <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>-->
                <!--</Border.Background>-->
                <!--<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Stroke>
                    </Path>-->
                <!--</Border>-->
                <ContentPresenter x:Name="HeaderHost" ContentSource="Header" Width="{Binding Path=Width,RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}" RecognizesAccessKey="True" Margin="15,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>-->
            <Trigger Property="IsChecked" Value="true">
                <!--<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />-->
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <!--<Setter TargetName="Check" Property="Visibility" Value="Visible" />-->
                <!--<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />-->
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                        <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                        </LinearGradientBrush>-->
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter-->
            </Trigger>
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ThirdMenuItemHeader 有子菜单的三级子菜单(暂时不用)-->
    <Style x:Key="ThirdMenuItemHeader" TargetType="{x:Type MenuItem}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="136" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="MicrosoftYaHei" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderThickness="0">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>-->
                            <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />-->
                            <!--<ColumnDefinition Width="*" />-->
                            <!--<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />-->
                            <!--<ColumnDefinition Width="13" />-->
                            <!--</Grid.ColumnDefinitions>-->
                            <!--<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />-->
                            <ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />-->
                            <!--<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>-->
                            <Popup x:Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                                    </Border.BorderBrush>
                                    <Border.Effect>
                                        <DropShadowEffect Color="LightGray" />
                                    </Border.Effect>
                                    <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                                    <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                                    </LinearGradientBrush>-->
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="BorderBrush" TargetName="Border">
                            <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush></Setter.Value></Setter>-->
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="2,0,0,0" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                        <Trigger SourceName="Popup" Property="IsOpen" Value="true">
                            <Setter TargetName="SubmenuBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource FirstLevelMenuPopupColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ThirdMenuItem 无子菜单的三级子菜单(暂时不用)-->
    <Style x:Key="ThirdMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="136" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="MicrosoftYaHei" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderThickness="0">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>-->
                            <!--<ColumnDefinition Width="Auto"SharedSizeGroup="Icon" />-->
                            <!--<ColumnDefinition Width="*" />-->
                            <!--<ColumnDefinition Width="Auto"SharedSizeGroup="Shortcut" /><ColumnDefinition Width="13" />-->
                            <!--</Grid.ColumnDefinitions>-->
                            <!--<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />-->
                            <!--<Border x:Name="Check" Width="13" Height="Auto" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">-->
                            <!--<Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>-->
                            <!--<Border.Background>-->
                            <!--<SolidColorBrush Color="{DynamicResource ThirdLevelMenuPopupBrush}" />-->
                            <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>-->
                            <!--</Border.Background>-->
                            <!--<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                        </Path.Stroke>
                    </Path>-->
                            <!--</Border>-->
                            <ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                        <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>-->
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />-->
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="true">
                            <!--<Setter TargetName="Check" Property="Visibility" Value="Visible" />-->
                            <!--<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />-->
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource MenuItemMouseOverColor}" />
                                    <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
                        </LinearGradientBrush>-->
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter-->
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                <Setter Property="Width" Value="130" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                <Setter Property="Width" Value="130" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontFamily" Value="MicrosoftYaHei" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--滚动条 滑块颜色-->
    <SolidColorBrush x:Key="CmBackgroun1" Color="#C5C5C5" />
    <!--9a9a9a-->
    <!--滚动条 背景颜色-->
    <SolidColorBrush x:Key="CmBackgroun2" Color="#ffffff" />
    <!--edebeb-->
    <!--DataGrid-->
    <!--下拉框 边框颜色-->
    <SolidColorBrush x:Key="CmBorderBrush2" Color="#e97690" />
    <!--下拉框 滚动条颜色-->
    <!--<SolidColorBrush x:Key="CmBorderBrush3" Color="#65c178"/>-->
    <SolidColorBrush x:Key="CmBorderBrush3" Color="#C5C5C5" />
    <!--===========ScrollViewer滚动条===========-->
    <Style x:Key="ScrollViewerStyleNew" TargetType="{x:Type ScrollViewer}">
        <Setter Property="CanContentScroll" Value="True" />
        <Setter Property="PanningMode" Value="Both" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.RowSpan="2" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Opacity="0" Cursor="Arrow" Grid.RowSpan="2" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource HorizontalScrollBarStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" BeginTime="0:0:2" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" BeginTime="0:0:2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="Grid">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" BeginTime="0:0:2" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" BeginTime="0:0:2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" SourceName="Grid">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="{DynamicResource CmBackgroun1}" RadiusX="2.5" RadiusY="2.5">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollBar}}, Path=Background}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{DynamicResource CmBackgroun2}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="6" />
        <Setter Property="MinWidth" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border BorderThickness="0" Background="Transparent">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollBar}}, Path=Background}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{DynamicResource CmBackgroun2}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Height" Value="9" />
        <Setter Property="MinHeight" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border BorderThickness="0">
                        <Track x:Name="PART_Track" IsDirectionReversed="False" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--===========ScrollViewer滚动条===========-->
</ResourceDictionary>