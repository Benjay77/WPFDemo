<RadioButton x:Class="RCApp_Win.View.Common.UC_RadioButtonTabClose"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RCApp_Win.View.Common">
    <RadioButton.Resources>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <!--<Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Background" Value="White" />-->
                <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <!--<Ellipse Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"></Ellipse>-->
                            <!--<TextBlock x:Name="text" FontSize="10" Text="X" Foreground="LightGray" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>-->
                            <Image x:Name="image" Source="pack://application:,,,/Themes/images/Common/NewMenuIcon/PressClosed.png" HorizontalAlignment="Center" VerticalAlignment="Center" Height="14" Width="14" />
                        </Grid>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#FF0EC992" />
                                <Setter TargetName="text" Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="false">
                                <Setter Property="Background" Value="#FF0EC992" />
                                <Setter TargetName="text" Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </RadioButton.Resources>
    <RadioButton.Style>
        <Style TargetType="{x:Type RadioButton}">
            <!--<Setter Property="BorderBrush" Value="Black" />-->
            <!--<Setter Property="BorderThickness" Value="1,1,1,0" />-->
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="26" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border CornerRadius="3,3,0,0" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <!--<ContentPresenter Grid.Column="0" ContentSource="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />-->
                                <TextBlock Grid.Column="0" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}, Path=Content}" TextTrimming="CharacterEllipsis" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                                <Button Grid.Column="1" x:Name="btn_Close" Style="{StaticResource CloseButtonStyle}" Click="btn_Close_Click" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#FFFFFFFF" />
                                <Setter Property="Foreground" Value="#FF07AF7E" />
                                <Setter TargetName="btn_Close" Property="Visibility" Value="Visible" />
                                <!--<Setter Property="BorderBrush" Value="#FF0CB382" />-->
                                <!--<Setter Property="ToolTipService.IsEnabled" Value="False" />-->
                                
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" Value="#FF0EC992" />
                                <Setter Property="Foreground" Value="#FFFFFFFF" />
                                <Setter TargetName="btn_Close" Property="Visibility" Value="Hidden" />
                                <!--<Setter Property="BorderBrush" Value="#FF8CD2BD" />-->
                                <!--<Setter Property="ToolTipService.IsEnabled" Value="True" />-->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn_Close" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="false" />
                                    <Condition Property="IsChecked" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="btn_Close" Property="Visibility" Value="Hidden" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </RadioButton.Style>
</RadioButton>
