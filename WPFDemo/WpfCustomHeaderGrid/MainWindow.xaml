<Window x:Class="WpfCustomHeaderGrid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:sb="clr-namespace:Wpf.Controls;assembly=Wpf.SplitButton"
        Title="MainWindow" Height="350" Width="525">

    <Window.Resources>
        <ResourceDictionary>
            <!--Brushes-->
            <!--Light brush, to highlight.-->
            <LinearGradientBrush x:Key="lightBrushBack" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#7EFFFFFF" Offset="0"/>
                <GradientStop Color="#03FFFFFF" Offset=".4"/>
                <GradientStop Color="#00030000" Offset=".5"/>
                <GradientStop Color="#0AFFFFFF" Offset=".55"/>
                <GradientStop Color="#7EFFFFFF" Offset="1"/>
            </LinearGradientBrush>
            <!--Normal brush, little darker than light brush.-->
            <LinearGradientBrush x:Key="normalBrushBack" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#7EF0F0F0" Offset="0"/>
                <GradientStop Color="#03FFFFFF" Offset=".4"/>
                <GradientStop Color="#00030000" Offset=".5"/>
                <GradientStop Color="#0AFFFFFF" Offset=".55"/>
                <GradientStop Color="#3EFFFFFF" Offset="1"/>
            </LinearGradientBrush>

            <!--Custom Button Styling-->
            <Style x:Key="RectPlainButton" TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="{TemplateBinding Background}">
                                <Border x:Name="border" BorderThickness="1" BorderBrush="Transparent" />
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Border x:Name="glow" Opacity="0" HorizontalAlignment="Stretch" CornerRadius="4" Background="{StaticResource lightBrushBack}" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="glow" Property="Opacity" Value="1" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFFFF" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DataGrid x:Name="dataGrid" RowBackground="Transparent" Background="#FF81BEF7">
            <DataGrid.Resources>

                <!--A custom DataGridColumnHeadersPresenter is required to "not" display the custom ColumnHeader template as background of the datagrid header-->
                <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                                <Grid>
                                    <!--"part_fillercolumnheader" (DataGridColumnHeader type) is removed, and a plain rectangle is placed in its place.-->
                                    <Rectangle Fill="{StaticResource normalBrushBack}" />

                                    <!--Leave the item presenter in its place.-->
                                    <ItemsPresenter x:Name="itemsPresenter" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--End of custom DataGridColumnHeadersPresenter template-->

                <!--Custom Column Header Gripper styling-->
                <!--Thanks to Nipun Tomar (http://www.c-sharpcorner.com/UploadFile/nipuntomar/wpf-datagrid-style/)-->
                <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="Width" Value="3"/>
                    <Setter Property="Foreground" Value="Transparent" />
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Foreground}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!--Custom Column Header template to show extra elements in the header-->
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <!--Let's keep the top section grid to contain the DataGridHeaderBorder, and left+right thumbs.-->
                                <Grid x:Name="fullHeader" Background="{StaticResource normalBrushBack}">

                                    <!--Here is the theme based DataGridHeaderBorder. I've used Aero here.-->
                                    <aero:DataGridHeaderBorder x:Name='HeaderBorder'
                                                               SortDirection="{TemplateBinding SortDirection}"
                                                               IsHovered="{TemplateBinding IsMouseOver}"
                                                               IsPressed="{TemplateBinding IsPressed}"
                                                               IsClickable="{TemplateBinding CanUserSort}"
                                                               BorderThickness="0,0,1,1"
                                                               BorderBrush="{TemplateBinding Foreground}"
                                                               Background="Transparent"
                                                               SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                               SeparatorBrush="#FFC9CACA">

                                        <!--We will put 3 elements inside the border: Content of header, a drop down button, and a sort order indicator.-->
                                        <Grid Margin="0,0,0,0">

                                            <Grid.ColumnDefinitions>
                                                <!--For ContentPresenter-->
                                                <ColumnDefinition Width="*" />
                                                <!--For drop down button-->
                                                <ColumnDefinition Width="14" />
                                                <!--For sort order indicator-->
                                                <ColumnDefinition Width="12" />
                                            </Grid.ColumnDefinitions>

                                            <!--A hidden rectangle is placed to be shown when mouse hovers on the column (to highlight the column.)-->
                                            <Rectangle x:Name="HoverRectangle"
                                               Stretch="Fill"
                                               Grid.ColumnSpan="3"
                                               Fill="{StaticResource lightBrushBack}"
                                               Opacity="0"
                                               StrokeThickness="0"
                                               />

                                            <!--Content of the header.-->
                                            <ContentPresenter Grid.Column="0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  Cursor="{TemplateBinding Cursor}" />

                                            <!--A drop down filter button.-->
                                            <!--Thanks to "alrh" (http://www.codeproject.com/Articles/20612/A-WPF-SplitButton) -->
                                            <sb:SplitButton x:Name="PART_DropDown"
                                                            Grid.Column="1"
                                                            Mode="Dropdown"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding Foreground}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            Style="{StaticResource RectPlainButton}"
                                                            >
                                                <sb:SplitButton.Content>
                                                    <!--A filter symbol-->
                                                    <Path Data="M 0,0 L 1,1 1,3 2,3 2,1 3,0 Z"
                                                          Stretch="UniformToFill"
                                                          Stroke="{TemplateBinding Foreground}"
                                                          Fill="{TemplateBinding Foreground}"
                                                          Margin="2"
                                                          />
                                                </sb:SplitButton.Content>

                                                <!--Dummy menu items, to be displayed when use clicks the filter button.-->
                                                <MenuItem Header="Filter 1"/>
                                                <MenuItem Header="Filter 2"/>
                                                <MenuItem Header="Filter 3"/>
                                            </sb:SplitButton>

                                            <!--A sort order arrow icon.-->
                                            <!--Thanks to Nipun Tomar (http://www.c-sharpcorner.com/UploadFile/nipuntomar/wpf-datagrid-style/)-->
                                            <Path x:Name="SortArrow"
                                                  Grid.Column="2"
                                                  HorizontalAlignment="Right" VerticalAlignment="Center" 
                                                  Width="8"
                                                  RenderTransformOrigin=".5,.5"
                                                  Visibility="Visible"
                                                  Fill="{TemplateBinding Foreground}"
                                                  Stretch="Uniform"
                                                  Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z">
                                            </Path>
                                        </Grid>
                                    </aero:DataGridHeaderBorder>

                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                    <Trigger Property='IsMouseOver' SourceName="fullHeader" Value='True'>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.20000"
                                                                     Storyboard.TargetName="HoverRectangle"
                                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     To='1.0' />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.20000"
                                                                     Storyboard.TargetName="HoverRectangle"
                                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     To='0' />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--End of custom DataGridColumnHeader template-->

            </DataGrid.Resources>
        </DataGrid>

    </Grid>
</Window>
