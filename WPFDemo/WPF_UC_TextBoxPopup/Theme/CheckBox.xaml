<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:cp="clr-namespace:JP.HCZZP.WPFApp.Infrastructure;assembly=JP.HCZZP.WPFApp.Infrastructure"
    xmlns:res="clr-namespace:JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary;assembly=JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/JP.HCZZP.WPFApp.QW.Modules.ControlLibrary;component/Themes/PathGeometryData.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="CheckBoxDefaultTemplate" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="#00000000">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder"  Margin="7 0"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding cp:ControlAttachProperty.CornerRadius}">
                    <Grid x:Name="markGrid">

                        <Path x:Name="optionMark" Width="14"
                              Height="{Binding Width,
                              RelativeSource={RelativeSource Self}}"
                              Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Data="{StaticResource IconSelected2}"
                              Fill="{TemplateBinding cp:ControlAttachProperty.Fill}"
                              RenderTransformOrigin="0.5,0.5"  Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0" ScaleY="0" />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                    </Grid>
                </Border>
                <ContentPresenter Grid.Column="1" x:Name="contentPresenter" 
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Focusable="False" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <!--<Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="1" />
                            --><!--<ColorAnimation Duration="0:0:0.2" From="#FF00FFFB" Storyboard.TargetName="borderMark"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />--><!--
                        </Storyboard>-->
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        
                    </VisualState>

                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="Padding" Value="4,0,0,0" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">

            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">

            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ReportFinish}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="1" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="0" />
                            <DoubleAnimation Duration="0:0:0.2" From="1" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">

            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DefaultSquare" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Border BorderBrush="{DynamicResource {x:Static res:CustomResources.OneGradientForeKey}}" BorderThickness="1" Grid.ColumnSpan="2">
                <Grid Margin="5" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="checkBoxBorder" Grid.Column="1" Margin="7 0 0 0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="2">
                        <Grid x:Name="markGrid">

                            <Path x:Name="optionMark" Width="14"
                                  Height="{Binding Width,
                                  RelativeSource={RelativeSource Self}}"
                                  Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Data="{StaticResource IconSelected}"
                                  Fill="{TemplateBinding cp:ControlAttachProperty.Fill}"
                                  RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform  ScaleX="0" ScaleY="0"/>
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                        </Grid>
                    </Border>
                    <ContentPresenter x:Name="contentPresenter" 
                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Focusable="False" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            </Border>
            
            
            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        
                    </VisualState>

                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="Padding" Value="4,0,0,0" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">

            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
               
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ReportFinish}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="1" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="0" />
                            <DoubleAnimation Duration="0:0:0.2" From="1" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">

            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BlueCheckBox" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <!--<Label Style="{DynamicResource DataBorder}" Grid.ColumnSpan="2">-->
                <Grid Margin="5" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="checkBoxBorder"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            BorderThickness="1"
                            BorderBrush="#02345A"
                            CornerRadius="2">
                        <Grid x:Name="markGrid">
                            <Path x:Name="optionMark" Width="14" Height="{Binding Width,
                                  RelativeSource={RelativeSource Self}}"
                                  Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Data="{StaticResource IconSelected}" Fill="#1889D7"
                                  RenderTransformOrigin="0.5,0.5" Stretch="Uniform">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Margin="5,0,0,0"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Focusable="False" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            <!--</Label>-->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetName="optionMark"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             To="1" />
                            <!--<ColorAnimation Duration="0:0:0.2" From="#FF00FFFB" Storyboard.TargetName="borderMark"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <!--<ColorAnimation Duration="0:0:0.2" From="#FF00FFFB" Storyboard.TargetName="borderMark"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="Padding" Value="4,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False"/>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#1889D7"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False"/>
            <Trigger Property="IsChecked" Value="{x:Null}"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CheckBoxOnDutySelect"  TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#FF00FFFB" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource DefaultSquare}" />
        <Setter Property="cp:ControlAttachProperty.CornerRadius" Value="0"/>
        <Setter Property="cp:ControlAttachProperty.Fill" Value="#00FF66"/>
    </Style>

    <ControlTemplate x:Key="MapToolSquare" TargetType="{x:Type CheckBox}">
        <Border x:Name="border" Width="100" Height="30" BorderBrush="#006699" BorderThickness="1"
                                    CornerRadius="2" Background="#5C93BD">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                <Image x:Name="image" Stretch="Uniform" Visibility="Collapsed" />
                <TextBlock Name="TitleText" Text="{Binding Name}" Foreground="White" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#006699"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CheckBoxOnMapToolSelect"  TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource  MapToolSquare}" />
        <Setter Property="cp:ControlAttachProperty.CornerRadius" Value="0"/>
    </Style>

  


</ResourceDictionary>