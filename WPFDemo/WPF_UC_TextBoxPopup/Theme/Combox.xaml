<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:res="clr-namespace:JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary;assembly=JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary"
                    xmlns:Converters="clr-namespace:JP.HCZZP.WPFApp.Infrastructure.Converter;assembly=JP.HCZZP.WPFApp.Infrastructure"
                    xmlns:local="clr-namespace:JP.HCZZP.WPFApp.Infrastructure.Controls;assembly=JP.HCZZP.WPFApp.Infrastructure">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/JP.HCZZP.WPFApp.QW.Modules.ControlLibrary;component/Themes/PathGeometryData.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Converters:StringIsEmptyConverter x:Key="StringIsEmptyConverter" />

    <Color x:Key="Color.Light.Border.Normal">#D7DDE4</Color>
    <Color x:Key="Color.Light.Border.MouseOver">#5CADFF</Color>

    <SolidColorBrush x:Key="Light.Border.Normal" Color="#27DEED" />
    <SolidColorBrush x:Key="Light.Border.MouseOver" Color="#5CADFF" />
    <SolidColorBrush x:Key="Light.Border.Pressed" Color="#5CADFF" />
    <SolidColorBrush x:Key="Light.Border.Disabled" Color="#D7DDE4" />

    <SolidColorBrush x:Key="Brush.Item.MouseOver.Background" Color="#8F0C4172" />
    <SolidColorBrush x:Key="Brush.Item.Selected.Background" Color="#0C4172" />
    <SolidColorBrush x:Key="Brush.Item.MouseOver.Foreground" Color="#000000" />
    <SolidColorBrush x:Key="Brush.Item.Selected.Foreground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="Brush.Content.Backgroud" Color="#062635"></SolidColorBrush>

    <!--  三角形填充颜色  -->
    <SolidColorBrush x:Key="Light.Triangle.Fill" Color="#27DEED" />

    <!--#region ComboBoxStyle基样式-->
    <!--  ComboBox样式 add by zhidf 2015.12.31  -->
    <SolidColorBrush x:Key="BorderColor" Color="#00D3D6DB" />
    <SolidColorBrush x:Key="ComboBox.BorderBrush" Color="#ABADB3" />
    <SolidColorBrush x:Key="ComboBox.Popup.BorderBrush" Color="#27DEED" />
    <SolidColorBrush x:Key="ComboBox.Normal.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Foreground" Color="#888" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#00eeeeee" />
    <SolidColorBrush x:Key="ComboBox.Disabled.BorderBrush" Color="#00888888" />

    <SolidColorBrush x:Key="ComboBoxItem.MouseOver.Background" Color="#E2E2E2" />
    <SolidColorBrush x:Key="ComboBoxItem.MouseOver.Foreground" Color="#000000" />

    <DropShadowEffect x:Key="BorderShadow" BlurRadius="5" Opacity="0.2" ShadowDepth="0"
                      Color="Brown" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type local:ZToggleButton}">
        <Grid Background="Transparent" x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" x:Name="ShadowBorder" CornerRadius="{TemplateBinding CornerRadius}" 
                    Background="Transparent"  SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="5" Opacity="0.2" ShadowDepth="0" Color="Transparent" />
                </Border.Effect>
            </Border>

            <Border BorderThickness="1" x:Name="Border" Grid.ColumnSpan="2" BorderBrush="{DynamicResource {x:Static res:CustomResources.OneGradientForeKey}}"></Border>
            <!--<Label x:Name="Border" Style="{DynamicResource DataBorder}" Grid.ColumnSpan="2" Padding="0"/>-->

            <Border Name="ButtonBorder" BorderBrush="{DynamicResource {x:Static res:CustomResources.OneGradientForeKey}}" Background="#00000000" Cursor="Arrow" BorderThickness="1 0 0 0" Grid.Column="1" Margin="1" Padding="5 0">
                <Path Name="Arrow" Grid.Column="1" Width="10" HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource DownArrow}"
                      Fill="{DynamicResource {x:Static res:CustomResources.FiveForeKey}}"
                      RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                      UseLayoutRounding="True">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="180" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Brown" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="0" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Opacity" Value="0.7" />
            </Trigger>
            
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="grid" Property="Opacity" Value="0.5" />

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                        <ContentPresenter.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{DynamicResource {x:Static res:CustomResources.OneSizeKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DefaultForeKey}}"/>
                            </Style>
                        </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Item.MouseOver.Background}" />

                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Item.Selected.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush.Item.Selected.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ZComBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="#000000" />
        <Setter Property="TextElement.FontSize" Value="12" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Watermark" Value="--请选择--" />
        <Setter Property="WartermarkForeground" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="BorderBrush" Value="#043E64"/>
        <Setter Property="Background" Value="#01000000"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ZComBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard_Open">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Close">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Width="{TemplateBinding Width}" x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1">
                            <local:ZToggleButton x:Name="ToggleButton" ClickMode="Press"
                                                 CornerRadius="{TemplateBinding CornerRadius}"
                                                 Focusable="False"
                                                 BorderThickness="{TemplateBinding BorderThickness}"
                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                 IsChecked="{Binding Path=IsDropDownOpen,
                                                 RelativeSource={RelativeSource TemplatedParent},
                                                 Mode=TwoWay}" Cursor="Hand"
                                                 Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 30, 3" HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" IsEnabled="{TemplateBinding IsEnabled}" >
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DefaultForeKey}}"/>
                                        <Setter Property="FontSize" Value="{DynamicResource {x:Static res:CustomResources.OneSizeKey}}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            
                            <TextBlock 
                                HorizontalAlignment="Left"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontSize="{TemplateBinding FontSize}" Margin="5, 3, 30, 3"
                                Opacity="0.4" IsHitTestVisible="False"
                                Foreground="{TemplateBinding WartermarkForeground}"
                                Text="{TemplateBinding Watermark}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Text.IsEmpty, ElementName=PART_EditableTextBox}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <!--下拉框的可编辑文本样式-->
                            <TextBlock x:Name="PART_EditableTextBox" Margin="0 0 30 0" TextTrimming="CharacterEllipsis"  Visibility="Collapsed"/>

                            <!--  Popup showing items  -->
                            <Popup Name="Popup"
                                   MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                   MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                  PopupAnimation="Slide"
                                   AllowsTransparency="True" Focusable="False" HorizontalOffset="-1"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom" StaysOpen="False" VerticalOffset="1">
                                <Grid Name="DropDown" 
                                      Width="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                      Margin="10,0,10,10" RenderTransformOrigin="0.5,0" SnapsToDevicePixels="True">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>

                                    <Border Name="DropDownBorder" Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1" CornerRadius="0" SnapsToDevicePixels="True" UseLayoutRounding="True" >

                                        <ScrollViewer  x:Name="ZComboxEx_ScrollViewer" HorizontalScrollBarVisibility="Disabled"  SnapsToDevicePixels="True" 
                                                      Style="{DynamicResource ScrollViewerOnQWDuty}">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="0"  >
                                                <ItemsPresenter.Resources>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static res:CustomResources.DefaultForeKey}}"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource {x:Static res:CustomResources.OneSizeKey}}"/>
                                                    </Style>
                                                </ItemsPresenter.Resources>
                                            </ItemsPresenter>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Storyboard_Open}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Storyboard_Close}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="100" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="Gray" />
                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--#endregion-->
</ResourceDictionary>