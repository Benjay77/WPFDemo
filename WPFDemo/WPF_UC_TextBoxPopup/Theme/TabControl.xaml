<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:res="clr-namespace:JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary;assembly=JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary"
    xmlns:c="clr-namespace:JP.HCZZP.WPFApp.Infrastructure.Controls;assembly=JP.HCZZP.WPFApp.Infrastructure"
    xmlns:cp="clr-namespace:JP.HCZZP.WPFApp.Infrastructure;assembly=JP.HCZZP.WPFApp.Infrastructure"
    >

    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA" />
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9" />
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#1075D0" />

    <Style x:Key="TabItemStyle" TargetType="{x:Type c:TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultHighlightForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TabItem}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Rectangle Fill="{DynamicResource {x:Static res:CustomResources.OneForeKey}}" Name="RangTop" Opacity="0" Grid.ColumnSpan="2" Height="5"/>
                            <ContentPresenter Grid.Column="1" Grid.Row="1" x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header" Focusable="False" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="None">
                            <Setter TargetName="RangTop" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                                <Condition Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Line" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Cursor" Value="Hand" />
                            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                                <Condition Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Line" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />

                            <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.FourForeKey}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                                <Condition Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Card" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Cursor" Value="Hand" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                                <Condition Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Card" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />

                            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
                            <Setter Property="BorderThickness" Value="1,0,1,0" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static res:CustomResources.FourForeKey}}" />

                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <DoubleAnimation BeginTime="0:0:0.1"  Duration="0:0:0.3"   Storyboard.TargetName="RangTop" Storyboard.TargetProperty="Opacity" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard  >
                                        <DoubleAnimation BeginTime="0:0:0.1" Duration="0:0:0.3"  Storyboard.TargetName="RangTop" Storyboard.TargetProperty="Opacity" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                                <Condition Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Card" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />

                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Line">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="None">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Card">
                            <Setter TargetName="border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="border" Property="Margin" Value="0 0 0 -1.3" />

                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Type, RelativeSource={RelativeSource AncestorType={x:Type c:TabControl}}}" Value="None">
                            <Setter TargetName="border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="border" Property="Margin" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="RangTop"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHandleStyle"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid 
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type c:GridExpander}}}"
                                  x:Name="ArrowShape"
                                  RenderTransformOrigin="0.5,0.5">
                                <Image Source="{DynamicResource YuanHuan}" Height="30" Width="30" Stretch="Uniform"/>
                                <Image Source="{DynamicResource ArrowLeft}" Width="20" Stretch="Uniform"/>
                                
                            </Grid>
                            
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                                             To="180"
                                                                             Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                                             To="0"
                                                                             Duration="00:00:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type c:TabControl}" x:Key="TabControl_Main_Duty">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
        <Setter Property="Type" Value="Card"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HeaderPanelHorizontalAlignment" Value="Stretch"/>
        <Setter Property="HeaderPanelVerticalAlignment" Value="Stretch"/>
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="cp:ControlAttachProperty.IsSpecial" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            <RowDefinition x:Name="RowDefinition2" Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <Grid x:Name="headerPanel" ClipToBounds="False" Grid.Row="0" VerticalAlignment="Top" Margin="{TemplateBinding HeaderPanelMargin}"  Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <!--LaftTabBack-->
                                <Image  Margin="0 15 0 0" Source="{DynamicResource {x:Static res:CustomResources.QW_LeftBackImgKey}}" HorizontalAlignment="Left" Stretch="Fill" Height="748" Width="197"/>
                             
                                <StackPanel Margin="0 3 0 0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <Image  Source="{DynamicResource DecorateLeft}" Stretch="None"/>
                                    <Grid Margin="10 0" >
                                        <ToggleButton IsChecked="{Binding ElementName=GridExpander2,Path=IsCollapsed,Mode=TwoWay}"   Style="{StaticResource ExpanderHandleStyle}">
                                            <ToggleButton.ToolTip>
                                                <c:ToolTip2 Content="折叠导航栏"/>
                                            </ToggleButton.ToolTip>
                                        </ToggleButton>
                                        

                                    </Grid>
                                    <Image Source="{DynamicResource DecorateLeft}" Stretch="None" RenderTransformOrigin="0.5,0.5">
                                        <Image.RenderTransform>
                                            <RotateTransform Angle="180"/>
                                        </Image.RenderTransform>
                                    </Image>
                                </StackPanel>

                                <TabPanel Margin="0 10 0 0 " HorizontalAlignment="{TemplateBinding HeaderPanelHorizontalAlignment}" VerticalAlignment="{TemplateBinding HeaderPanelVerticalAlignment}"  
                                  Panel.ZIndex="1" Background="Transparent" IsItemsHost="true" 
                                  KeyboardNavigation.TabIndex="1" />
                            </Grid>
                            <c:GridExpander Width="Auto" Grid.Column="1" x:Name="GridExpander2" IsAnimated="True" VerticalAlignment="Top" Direction="Previous" Background="Transparent">
                                
                            </c:GridExpander>
                        </Grid>
                        <Border x:Name="contentPanel" Grid.Row="1" Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local" 
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True">
                            <Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding HeaderPanelMargin}">
                                    <ToggleButton VerticalAlignment="Top" IsHitTestVisible="False" Opacity="0" x:Name="PartOne"  Margin="-15 3 0 0" HorizontalAlignment="Left"  IsChecked="{Binding ElementName=GridExpander2,Path=IsCollapsed,Mode=TwoWay}" Style="{StaticResource ExpanderHandleStyle}" RenderTransformOrigin="0.5,0.5" >
                                        <ToggleButton.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </ToggleButton.RenderTransform>
                                        <ToggleButton.ToolTip>
                                            <c:ToolTip2 Content="展开导航栏"/>
                                        </ToggleButton.ToolTip>
                                    </ToggleButton>
                                </Grid>

                            </Grid>

                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PartOne" Property="IsMouseOver" Value="True">
                            
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PartOne" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                                             To="15"
                                                                             Duration="00:00:0.5" BeginTime="00:00:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PartOne" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                                              To="0"
                                                                             Duration="00:00:0.5" BeginTime="00:00:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="PartOne" Property="IsChecked" Value="True">
                            <Setter TargetName="PartOne" Property="IsHitTestVisible" Value="True"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PartOne" Storyboard.TargetProperty="Opacity"
                                                                             From="0" To="1"
                                                                             Duration="00:00:0.0" BeginTime="00:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PartOne" Storyboard.TargetProperty="Opacity"
                                                                             From="1" To="0"
                                                                             Duration="00:00:0.0" BeginTime="00:00:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="cp:ControlAttachProperty.IsSpecial" Value="True">
                            <Setter TargetName="headerPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsGreaterOne,RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="contentPanel" Property="BorderThickness" Value="0"/>
                        </DataTrigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:TabControl}" x:Key="TabControl_DutyRecordView">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
        <Setter Property="Type" Value="Card"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HeaderPanelHorizontalAlignment" Value="Stretch"/>
        <Setter Property="HeaderPanelVerticalAlignment" Value="Stretch"/>
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="cp:ControlAttachProperty.TagBackground" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            <RowDefinition x:Name="RowDefinition2" Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border x:Name="contentPanel" Grid.Row="1" Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local" 
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Grid x:Name="headerPanel" Background="{TemplateBinding Background}" Grid.Row="0"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1">
                            <TabPanel Margin="{TemplateBinding HeaderPanelMargin}" HorizontalAlignment="{TemplateBinding HeaderPanelHorizontalAlignment}" VerticalAlignment="{TemplateBinding HeaderPanelVerticalAlignment}"  
                                  Panel.ZIndex="1" Background="Transparent" IsItemsHost="true" 
                                  KeyboardNavigation.TabIndex="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsGreaterOne,RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="contentPanel" Property="BorderThickness" Value="0"/>
                        </DataTrigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>