<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ip="clr-namespace:JP.HCZZP.WPFApp.Infrastructure;assembly=JP.HCZZP.WPFApp.Infrastructure"
    xmlns:res="clr-namespace:JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary;assembly=JP.HCZZP.WPFApp.Instruct.Modules.ResourceLibrary"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore">
    <Style TargetType="TextBox" x:Key="DutyTextBoxDefaultStyle" >
        <!--屏蔽系统右键菜单-->
        <Setter Property="input:InputMethod.IsInputMethodEnabled" Value="True"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Visibility="Collapsed"/>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.LineHeight" Value="22"/>
        <Setter Property="TextBlock.LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="CaretBrush" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="SelectionOpacity" Value="0.6"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>

                        <Label  Style="{DynamicResource DataBorder}" HorizontalAlignment="Stretch">
                            <Grid Margin="3">
                                <ScrollViewer Style="{DynamicResource ScrollViewerOnQWDuty}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" CanContentScroll="True"  ip:ControlAttachProperty.IsSpecial="True" />
                                <TextBlock x:Name="WaterMark" ip:ControlAttachProperty.AutoToolTip="False" Focusable="False" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Tag}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.4"/>
                            </Grid>
                        </Label>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="True">

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="DutyTextBoxNormalStyle" BasedOn="{StaticResource DutyTextBoxDefaultStyle}" >
        <Setter Property="Background" Value="#0A365D"/>
        <Setter Property="TextBlock.LineHeight" Value="16"/>
        <Setter Property="ip:ControlAttachProperty.CornerRadius" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding ip:ControlAttachProperty.CornerRadius}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <ScrollViewer Style="{DynamicResource ScrollViewerOnQWDuty}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" CanContentScroll="True"  ip:ControlAttachProperty.IsSpecial="True" />
                            <TextBlock x:Name="WaterMark" ip:ControlAttachProperty.AutoToolTip="False" Focusable="False" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Tag}" Margin="4 4 00 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.4"/>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="True">

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="DutyTextBoxFilterStyle" BasedOn="{StaticResource DutyTextBoxDefaultStyle}" >
        <Setter Property="Background" Value="#01000000"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static res:CustomResources.OneGradientForeKey}}"/>
        <Setter Property="TextBlock.LineHeight" Value="30"/>
        <Setter Property="ip:ControlAttachProperty.CornerRadius" Value="1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding ip:ControlAttachProperty.CornerRadius}" Padding="{TemplateBinding Padding}">
                        <Grid Margin="2 -6">
                            <ScrollViewer Style="{DynamicResource ScrollViewerOnQWDuty}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" CanContentScroll="True"  ip:ControlAttachProperty.IsSpecial="True" />
                            <TextBlock x:Name="WaterMark" ip:ControlAttachProperty.AutoToolTip="False" Focusable="False" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Tag}" Margin="5 0 0 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.4"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">

                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="True">

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>