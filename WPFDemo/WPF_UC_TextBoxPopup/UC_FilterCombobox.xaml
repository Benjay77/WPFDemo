<UserControl x:Class="JP.HCZZP.WPFApp.QW.Modules.ControlLibrary.UserControls.Common.UC_FilterCombobox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ip="clr-namespace:JP.HCZZP.WPFApp.Infrastructure;assembly=JP.HCZZP.WPFApp.Infrastructure"
             xmlns:local="clr-namespace:JP.HCZZP.WPFApp.QW.Modules.ControlLibrary.UserControls.Common"
             mc:Ignorable="d" 
              x:Name="uc_FilterCombobox">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/JP.HCZZP.WPFApp.QW.Modules.ControlLibrary;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/JP.HCZZP.WPFApp.QW.Modules.ControlLibrary;component/Themes/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="#065596">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="25"/>
        </Grid.ColumnDefinitions>
        <!--Text="{Binding Path=DictionaryModelSelected.Code, ElementName=uc_FilterCombobox,Mode=TwoWay}"-->
        <TextBox x:Name="txt_TextPopup"  Style="{DynamicResource DutyTextBoxFilterStyle}"
                         HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Top" MaxLength="30"  Tag="按回车搜索"
                         PreviewKeyDown="txt_TextPopup_PreviewKeyDown" Foreground="White" Width="150" Height="30" Text="{Binding Path=DictionaryModelSelected.Code, ElementName=uc_FilterCombobox,Mode=OneWay}">
        </TextBox>
        <CheckBox Grid.Row="0" Grid.Column="1" x:Name="chk_Togglet"   Margin="0,0,0,0" Click="chk_Togglet_Checked" HorizontalAlignment="Center"  BorderBrush="{DynamicResource DefaultBorderGradientBrush}" ClickMode="Press">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate  TargetType="{x:Type CheckBox}">
                                <Border Name="ButtonBorder" BorderBrush="{DynamicResource DefaultBorderGradientBrush}" BorderThickness="1 1 1 1" Background="Transparent" Cursor="Arrow"   Width="25">
                                    <Path Name="Arrow"  Width="10" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource DownArrow}"
                                          Fill="{DynamicResource DefaultBlueForeground}"
                                          RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                                          UseLayoutRounding="True">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <!--<Path  x:Name="path" Data="M80,160 L139.83333,239.83333 199.83399,159.5 z" Fill="LightGray" HorizontalAlignment="Center"  Stretch="Fill" Stroke="LightGray" Width="15" Height="10" Margin="0 0 10 0"/>-->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="Arrow" Property="Data" Value="{StaticResource UpArrow}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <!--PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"-->
        <Popup x:Name="popup_TextPopup"
                                   AllowsTransparency="true"  Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource AncestorType={x:Type UserControl},AncestorLevel=1}}"
                                   PopupAnimation="Slide"
                                   Placement="Bottom" IsOpen="{Binding ElementName=chk_Togglet, Path=IsChecked}"  Opened="popup_TextPopup_Opened" Closed="popup_TextPopup_Closed" MouseLeave="chk_Togglet_MouseLeave"
                                   PlacementTarget="{Binding ElementName=txt_TextPopup}" StaysOpen="{Binding ElementName=chk_Togglet, Path=IsChecked}">
            <Border Padding="0,0,0,0" Background="Transparent">
                <Border x:Name="Shdw"
                                            Background="Transparent"
                                            >
                    <Border x:Name="DropDownBorder"
                                                Margin="0,0,0,0"
                                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                BorderThickness="0"
                                                Background="Transparent">
                        <Grid SnapsToDevicePixels="True">
                            <Border Padding="10 5 0 0"
                                                        Background="#00234D"
                                                        x:Name="NoResultBorder"  Visibility="Collapsed">
                                <TextBlock Text="无匹配结果"
                                                               Foreground="White"  Height="25" FontSize="14"/>
                            </Border>
                            <ListBox x:Name="listBox_TextPopup" Style="{DynamicResource QWDutyList}"
                                                         ItemsSource="{Binding DataSourceList, ElementName=uc_FilterCombobox}"
                                                         Foreground="Black"
                                                         Margin="0,0"
                                                         Padding="0"
                                                         Background="#00234D"
                                                         MaxHeight="215"
                                                         BorderBrush="Transparent"
                                                         BorderThickness="0" SelectionChanged ="ListBox_TextPopup_OnSelectionChanged" SelectedValue="{Binding Path = DictionaryModelSelected, ElementName=uc_FilterCombobox,Mode=TwoWay}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Code}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Background"
                                                                    Value="Transparent" />
                                        <Setter Property="Padding"
                                                                    Value="0" />
                                        <Setter Property="BorderThickness"
                                                                    Value="0" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border x:Name="Bd"
                                                                                Height="30"
                                                                                Margin="0,0,0,0"
                                                                                BorderThickness="0"
                                                                                Background="{TemplateBinding Background}"
                                                                                SnapsToDevicePixels="true">
                                                        <ContentPresenter HorizontalAlignment="Stretch"
                                                                                              Margin="10,0,0,0"
                                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>

                                                        <Trigger Property="IsMouseOver"
                                                                                     Value="True">
                                                            <Setter TargetName="Bd"
                                                                                        Property="BorderBrush"
                                                                                        Value="{StaticResource Brush.Item.MouseOver.Background}" />
                                                            <Setter TargetName="Bd"
                                                                                        Property="Background"
                                                                                        Value="{StaticResource Brush.Item.MouseOver.Background}" />
                                                            <Setter Property="Foreground"
                                                                                        Value="White" />
                                                        </Trigger>
                                                        <!--<Trigger Property="IsSelected"
                                                                                     Value="true">
                                                            <Setter Property="Background"
                                                                                        TargetName="Bd"
                                                                                        Value="Blue" />
                                                            <Setter Property="Foreground"
                                                                                        Value="White" />
                                                        </Trigger>-->
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected"
                                                                                               Value="true" />
                                                                <Condition Property="Selector.IsSelectionActive"
                                                                                               Value="false" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background"
                                                                                        TargetName="Bd"
                                                                                        Value="{DynamicResource Brush.Item.MouseOver.Background}" />
                                                            <Setter Property="Foreground"
                                                                                        Value="{DynamicResource Brush.Item.Selected.Background}" />
                                                        </MultiTrigger>
                                                        <Trigger Property="IsEnabled"
                                                                                     Value="false">
                                                            <Setter Property="Foreground"
                                                                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                    </Border>
                </Border>
            </Border>
        </Popup>
    </Grid>
</UserControl>
