<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uc="clr-namespace:RCApp_Win.View.Common">
    <!--   Label   -->
    <!--必填的样式-->
    <Style x:Key="redLabel" TargetType="Label">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Foreground" Value="#ff1d1d" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--普通的样式-->
    <Style x:Key="normalLabel" TargetType="Label">
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    
    <!-- 文字居左且能够复制 -->
    <Style x:Key="CanCopyCellStyle" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- 默认样式 -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    
    <!--   TextBlock   -->
    <!-- 文字居左 -->
    <Style x:Key="LeftTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!-- 文字居中 -->
    <Style x:Key="CenterTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!-- 文字居右 -->
    <Style x:Key="RightTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="0,0,4,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <!--   TextBlock   -->
    <!-- 文字居左 -->
    <Style x:Key="LeftCellStyle" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!-- 文字居中 -->
    <Style x:Key="CenterCellStyle" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!-- 文字居右 -->
    <Style x:Key="RightCellStyle" TargetType="{x:Type TextBox}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Padding" Value="0,0,4,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--   TextBox  -->
    <!--Common-->
    <Style x:Key="CommTextBoxStyle1" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">        
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#2d1f87"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#66497e" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="#66497e" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsReadOnly" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            <Setter Property="Foreground" Value="#66497e" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--左对齐-->
    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#2d1f87"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <!--右对齐-->
    <Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#2d1f87"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <!--TextArea-->
    <Style x:Key="TextBoxStyle3" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#2d1f87"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- 默认样式 -->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="#2d1f87"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#2d1f87"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    

    <!--   Button -->
    <!--button默认 确定/保存/查询 样式-->
    <!--默认Button样式（仿照SaveButton 字体为12）-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#3333cc">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#4c38ba"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#d8d8d8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button默认 确定/保存/查询 样式 无字体大小设置-->
    <Style x:Key="QueryButtonStyle" TargetType="{x:Type Button}">        
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#3333cc">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#4c38ba"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#d8d8d8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button默认 确定/保存/查询 样式-->
    <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#3333cc">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#4c38ba"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#d8d8d8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button默认 取消/清空 样式-->
    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#bfbfbf">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#959595"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#d8d8d8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--button 带图片样式-->
    <Style x:Key="ButtonStyleImageChange" TargetType="{x:Type uc:UC_Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UC_Button}">
                    <Image x:Name="img" Width="25" Height="22" Source="{Binding Path=ContentOne,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_Button}}}"></Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="img" Property="Source" Value="{Binding Path=ContentTwo,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_Button}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button 带图片close 样式-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="22"/>
        <Setter Property="Background" Value="#2d1f87"/> <!--2d1f87-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Image x:Name="img" Width="25" Height="22" Source="../../Images/Common/close.png"></Image>-->
                    <Border x:Name="border" BorderThickness="1" SnapsToDevicePixels="True">
                        <Border.Background>
                            <ImageBrush x:Name="img" ImageSource="../../Images/Common/close.png"></ImageBrush>
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/close.png"/>
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../../Images/Common/close.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="22"/>
        <Setter Property="Background" Value="#2d1f87"/>
        <!--2d1f87-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Image x:Name="img" Width="25" Height="22" Source="../../Images/Common/close.png"></Image>-->
                    <Border x:Name="border" BorderThickness="1" SnapsToDevicePixels="True">
                        <Border.Background>
                            <ImageBrush x:Name="img" ImageSource="../../Images/Common/close.png"></ImageBrush>
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/close.png"/>
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../../Images/Common/close.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button 三级菜单功能 样式-->
    <Style x:Key="FuncButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#505050"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock x:Name="border" TextAlignment="Center" VerticalAlignment="Center" Padding="0" Margin="0">
                           <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#2d1f87" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#bfbfbf" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button 带图片和文字 style-->
    <Style x:Key="UCButtonStyle1" TargetType="{x:Type uc:UC_Button}">
        <Setter Property="Width" Value="78"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Margin" Value="0,0,15,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UC_Button}">
                    <Border x:Name="bd" HorizontalAlignment="Center" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="img" Height="16" Width="16" Margin="4,0,4,0" Source="{Binding Path=ContentOne,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_Button}}}"/>
                            <Label x:Name="txtb" Grid.Column="1" Padding="0,0,4,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="#505050" Content="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_Button}}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="img" Property="Source" Value="{Binding Path=ContentTwo,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_Button}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button 上一页 样式-->
    <Style x:Key="viewPreviewStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" >
                        <Image Source="/RCApp_Win;component/Themes/Images/Common/leftblue.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFAEAAAA"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button 下一页 样式-->
    <Style x:Key="viewNextStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" >
                        <Image Source="/RCApp_Win;component/Themes/Images/Common/rightblue.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFAEAAAA"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button  Style-->
    <!-- Button 查看（眼睛） 样式-->
    <Style x:Key="viewBtnStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" >
                        <Image Source="/RCApp_Win;component/Themes/Images/Common/observeeyeblue.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFAEAAAA"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button 打电话 样式-->
    <Style x:Key="callBtnStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" >
                        <Image Source="/RCApp_Win;component/Themes/Images/Common/phoneblue.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFAEAAAA"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button 回拨电话 样式-->
    <Style x:Key="callbackBtnStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" >
                        <Image Source="/RCApp_Win;component/Themes/Images/Common/callbyno.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFAEAAAA"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RadioButton-->
    <!--radiobutton 同意 样式-->
    <Style x:Key="angreeRdo" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border>
                        <Label x:Name="txtb"   Padding="14,4,14,4" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="White" Content="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="txtb" Property="Background" Value="#3333cc"></Setter>
                            <Setter TargetName="txtb" Property="Foreground" Value="White"></Setter>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="txtb" Property="Background" Value="#FFFFFF"></Setter>
                            <Setter TargetName="txtb" Property="Foreground" Value="#BFBFBF"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--radiobutton 不同意 样式-->
    <Style x:Key="notangreeRdo" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border>
                        <Label x:Name="txtb"   Padding="14,4,14,4" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="White" Content="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="txtb" Property="Background" Value="#FF5C5C"></Setter>
                            <Setter TargetName="txtb" Property="Foreground" Value="White"></Setter>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="txtb" Property="Background" Value="#FFFFFF"></Setter>
                            <Setter TargetName="txtb" Property="Foreground" Value="#BFBFBF"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBoxStyle样式-->
    <!-- CheckBoxStyle 下箭头﹀ 样式-->
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border BorderThickness="0" Width="30" Height="20">
                        <Image x:Name="img" Width="19" Height="12" Source="../../Images/Common/arrow2blue.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/arrow2blue.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/arrow1blue.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBoxStyle 上箭头︿ 样式-->
    <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border BorderThickness="0" Width="30" Height="20">
                        <Image x:Name="img" Width="14" Height="8" Source="../../Images/Common/arrow-look2blue.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/arrow-look2blue.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="img" Property="Source" Value="../../Images/Common/arrow-lookblue.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--checkbox 文字显示-->
    <Style  x:Key="ckbStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border BorderThickness="0" Name="bg" >
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="bg" Property="Background" Value="#3333cc"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="bg" Property="Background" Value="#bfbfbf"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ckbStyle2" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Label x:Name="lb" Content="{TemplateBinding Content}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Background="#bfbfbf"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="lb" Property="Background" Value="#3333cc">
                            </Setter>
                            <Setter TargetName="lb" Property="Foreground" Value="#ffffff">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CheckBox  Style-->
    <Style x:Key="checkbox" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">

                        <Label Name="lbl" Foreground="White" >
                            <ContentPresenter/>
                        </Label>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="lbl" Property="Background" Value="#3333cc"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="lbl" Property="Background" Value="#BCBCBC"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="noborder"  TargetType="ContentControl">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn" TargetType="Button" BasedOn="{StaticResource noborder}">
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="tab" x:Name="tab"  TargetType="uc:UC_RadioButton" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="#2d1f87"></Setter>
        <Setter Property="Width" Value="78"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:UC_RadioButton}">
                    <Border x:Name="bd" HorizontalAlignment="Center" Background="Transparent">

                        <Label x:Name="txtb" Style="{StaticResource noborder}" Grid.Column="1" Padding="14,4,14,4" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Foreground="White" Content="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type uc:UC_RadioButton}}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="txtb" Property="Background" Value="#6666cc" />

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>

                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#3333cc">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#4c38ba"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UploadImage" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>

        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"  BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#bfbfbf"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#bfbfbf">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#959595"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="red" TargetType="Label">
        <Setter Property="Foreground" Value="Red"></Setter>
    </Style>  
    <Style x:Key="error" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate TargetType="TextBox">
                    <Border  BorderBrush="Red" BorderThickness="2" CornerRadius="5">
                        <TextBox></TextBox>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>