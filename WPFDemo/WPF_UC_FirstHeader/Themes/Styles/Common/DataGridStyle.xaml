<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--滚动条颜色-->
    <!--<SolidColorBrush x:Key="CmBorderBrush3" Color="#65c178"/>-->
    <!--DataGrid CheckBox样式 -->
    <Style x:Key="DGCheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator SnapsToDevicePixels="true" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="0">
                                <Image x:Name="gou" Width="16" Height="16" Source="../../Images/Common/selectx.png"></Image>
                            </Border>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="gou" Property="Source" Value="../../Images/Common/selectx.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="gou" Property="Source" Value="../../Images/Common/selectbox1.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DataGrid CheckBox样式 -->
    <Style x:Key="DGCheckBoxStyle2" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator SnapsToDevicePixels="true" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="0">
                                <Image x:Name="gou" Width="16" Height="16" Source="../../Images/Common/selectbox2.png"></Image>
                            </Border>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="gou" Property="Source" Value="../../Images/Common/selectbox2.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="gou" Property="Source" Value="../../Images/Common/selectbox1.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="leftStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="#454545"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="Transparent" BorderThickness="0" TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4,0,0,0"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="rightStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="#454545"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="Transparent" BorderThickness="0" TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,4,0"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="centerStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="#454545"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="Transparent" BorderThickness="0" TextBlock.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    <!--Style and template for the DataGrid.-->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#f3f3f3" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#cecece"/>
        <Setter Property="VerticalGridLinesBrush" Value="#cecece"/>
        <Setter Property="AlternationCount" Value="2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border"
                            SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="Black">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}" Style="{DynamicResource {ComponentResourceKey  ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"  Visibility="{Binding HeadersVisibility,  ConverterParameter={x:Static DataGridHeadersVisibility.All},  Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                  Grid.Column="1"
                                                  Visibility="{Binding HeadersVisibility, 
                                                  ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                  Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                  Grid.ColumnSpan="2"
                                                  Grid.Row="1"
                                                  CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <Border Grid.Row="0" Grid.Column="2" BorderBrush="{DynamicResource CmBorderBrush3}" BorderThickness="0,0,0,0">
                                            <Rectangle Fill="{DynamicResource CmBorderBrush3}"></Rectangle>
                                        </Border>


                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                 Grid.Column="2"
                                                 Grid.Row="1"
                                                 Orientation="Vertical"
                                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                                 Maximum="{TemplateBinding ScrollableHeight}"
                                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                 Value="{Binding VerticalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                    Style="{DynamicResource VerticalScrollBarStyle}" BorderBrush="{DynamicResource CmBorderBrush3}" BorderThickness="1,0,0,0"/>

                                        <Grid Grid.Column="1"  Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Column="1"
                                                   Orientation="Horizontal"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                   Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                       Style="{DynamicResource HorizontalScrollBarStyle}" BorderBrush="{DynamicResource CmBorderBrush3}" BorderThickness="1,0,0,0"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style and template for the DataGridCell.-->
    <Style TargetType="DataGridCell">
        <!--<Setter Property="Foreground" Value="#454545"/>-->
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="Transparent" BorderThickness="0">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <!--Style and template for the DataGridRow.-->
    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="White" />
        <Setter Property="Height" Value="27"/>
        <!--<Setter Property="Foreground" Value="#616161" />-->
        <Setter Property="FontSize" Value="12" />
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#f0faf0" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#b3b3b3"/>               
                <!--<Setter Property="Foreground" Value="#FFFFFF"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style and template for the resize control on the DataGridRowHeader.-->
    <Style x:Key="RowHeaderGripperStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="Height"
          Value="8" />
        <Setter Property="Background"
          Value="Transparent" />
        <Setter Property="Cursor"
          Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style and template for the DataGridRowHeader.-->
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border x:Name="rowHeaderBorder"
                          Width="10"
                          BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control SnapsToDevicePixels="false"
                       Template="{Binding ValidationErrorTemplate, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                       Visibility="{Binding (Validation.HasError), 
                  Converter={StaticResource bool2VisibilityConverter}, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                            </StackPanel>
                        </Border>

                        <Thumb x:Name="PART_TopHeaderGripper"
                 Style="{StaticResource RowHeaderGripperStyle}"
                 VerticalAlignment="Top" />
                        <Thumb x:Name="PART_BottomHeaderGripper"
                 Style="{StaticResource RowHeaderGripperStyle}"
                 VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style and template for the resize control on the DataGridColumnHeader.-->
    <Style x:Key="ColumnHeaderGripperStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="Width"
          Value="8" />
        <Setter Property="Background"
          Value="Transparent" />
        <Setter Property="Cursor"
          Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Background" Value="#65c178" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="#cecece"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Style and template for the DataGridColumnHeadersPresenter.-->
    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="dgCellCenterStyle"  
               TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"  
                    Value="Center" />
    </Style>
    <Style x:Key="dgCellLeftStyle"  
               TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"  
                    Value="Left" />
    </Style>
    <Style x:Key="dgCellRightStyle"  
               TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"  
                    Value="Right" />
    </Style>
    <Style x:Key="dgCellRedRightStyle"  
               TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"  
                    Value="Red" />
        <Setter Property="HorizontalAlignment"  
                    Value="Right" />
    </Style>
</ResourceDictionary>