<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uc="clr-namespace:RCApp_Win.View.Common">
    
    
    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="#ffffff"/>
    <Setter Property="Cursor" Value="Hand"/>

    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                <Border x:Name="border" BorderThickness="0" Background="#bfbfbf">
                    <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter TargetName="border" Property="Background" Value="#959595"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="Foreground" Value="#ffffff"/>
    <Setter Property="Cursor" Value="Hand"/>

    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                <Border x:Name="border" BorderThickness="0" Background="#65c178">
                    <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter TargetName="border" Property="Background" Value="#2e9d5e"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
    <Style x:Key="textbox" TargetType="{x:Type TextBox}">       
        <Setter Property="Foreground" Value="#2E9D5E"/>    
    </Style>
    <Style x:Key="combox" TargetType="{x:Type ComboBox}">    
        <Setter Property="Foreground" Value="#2E9D5E"/>

    </Style>
    <Style x:Key="datapicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#2E9D5E"/>

    </Style>
    
    <Style x:Key="gridbackgroudgreen" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#2E9D5E"></Setter>
        
    </Style>
    <Style x:Key="noborder"  TargetType="ContentControl">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="10,10,10,10">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>                
                </ControlTemplate>              
            </Setter.Value>         
        </Setter>      
    </Style>

    <Style x:Key="GrayButton" TargetType="{x:Type Button}" BasedOn="{StaticResource noborder}">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#65c178">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#2e9d5e"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="selectbutton" TargetType="{x:Type Button}">
      <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0" Background="#bfbfbf">
                        <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>